<style type="text/css">
  #search_client_name_like, #search_ip_like {
  }
  .mac_address {
    font-size: 85%;
    color: gray;
  }
  .public_address, .proxy_arp {
    font-size: 85%;
    font-weight: bold;
    color: #555;
  }
  .forwarded_port {
    font-size: 85%;
  }
  #form_massive_setting ul li select {
    width: 120px;
  }
  #form_massive_setting ul li {
    margin-left: 11px;
    float: left;
  }
  span.red{
    color: red;
  }
  span.green{
    color: green;
  }
</style>
<script type="text/javascript">
  $(function(){
      initMoreToggle('#massive_setting', '#form_massive_setting', 'toggle_form_massive_setting');
    initMoreToggle('#search_more', '#search_advanced', 'toggle_contracts_search_advanced');
    initMoreToggle('#search_less', '#search_advanced', 'toggle_contracts_search_advanced');
    $('#search_client_name_like').autocomplete({
      delay: 200,
      source: '<%= names_clients_path %>',
      //FIXME change callback is not working in 1.8.12 hakcing select instead
      select: function(event, ui) {
        $(this).val(ui.item.value);
        $(this).closest('form').submit();
      },
      minLength: 2
    })
    $('#search_ip_like').autocomplete({
      delay: 200,
      source: '<%= ips_contracts_path %>',
      //FIXME change callback is not working in 1.8.12 hakcing select instead
      select: function(event, ui) {
        $(this).val(ui.item.value);
        $(this).closest('form').submit();
      },
      minLength: 2
    })
    $('input#select_all').change(function(){
      $('input[name="contracts_ids[]"]').prop("checked", $(this).is(":checked"));
    });
    $('#massive_setting_client_name').autocomplete({
      delay: 200,
      source: '<%= names_clients_path %>',
      //FIXME change callback is not working in 1.8.12 hakcing select instead
      select: function(event, ui) {
        $(this).val(ui.item.value);
        $(this).closest('form');
      },
      minLength: 2
    })
  })
</script>
<% content_for :title, t('menu.contracts') %>
<% heading (t 'menu.contracts') %>
<% render_new_button_for :contract %>

<%= render :partial => "shared/empty_submenu" %>
<%= render :partial => "search" %>

<div style="clear: both"></div>
<% if current_user.may_excel_contracts? %>
<ul id="nav" style="float:right">
  <li><%= link_to t('buttons.export_to_excel'), excel_contracts_path(params.merge(:action => :excel)) %> </li>
</ul>
<div style="clear: both"></div>
<% end %>

<div style="clear: both"></div>

<ul style="padding: 15px 0 25px 0">
  <li class="left" style="margin-left: 11px">
    <a id="massive_setting" ><%= I18n.t('buttons.form_massive_setting') %></a>
  </li>
</ul>
<div style="clear: both"></div>
<div id="form_massive_setting">
<% semantic_form_for 'massive_setting', :url => massive_contracts_path, :method => :put do |f| %>
  <ul class='massive_contracts'>
    <li>
      <%= f.input :client_name,
                  :label => t('activerecord.attributes.client.name'),
                  :required => false %>
    </li>
    <li>
      <%= f.input :plan,
                  :collection => Hash[Plan.all.map{|plan|[plan.name, plan.id]}],
                  :include_blank => true,
                  :label => t('activerecord.attributes.contract.plan'),
                  :required => false %>
    </li>
    <li>
      <%= f.input :state,
                  :collection => Contract.aasm_states_for_select,
                  :include_blank => true,
                  :required => false,
                  :label => t('activerecord.attributes.contract.state') %>
    </li>
    <li>
      <%= f.input :ceil_dfl_percent,
                  :as => :select,
                  :collection => (30..100).step(10).to_a,
                  :label => t('activerecord.attributes.contract.ceil_dfl_percent'),
                  :include_blank => true,
                  :required => false,
                  :wrapper_html => { :class => "left" } %>
    </li>
    <li>
      <%= f.input :detail,
                  :label => t('activerecord.attributes.contract.detail'),
                  :required => false  %>
    </li>
    <li>
      <%= f.input :cpe,
                  :label => t('activerecord.attributes.contract.cpe'),
                  :required => false  %>
    </li>
    <li>
      <%= f.input :node,
                  :label => t('activerecord.attributes.contract.node'),
                  :required => false  %>
    </li>
    <%= massive_settings_form_extensions f %>
    <div style="clear: both"></div>
    <li style="float: right">
      <%= f.submit t('buttons.massive_setting'),
                   :name  => "massive_update"  %>
      <%= f.submit t('buttons.massive_destroy'),
                   :name => "massive_destroy" %>
    </li>
</div>

<div class="separador"></div>



<div class="main">
  <div style="float: right;">
    <h3><%= t('messages.contracts_online', :count => Contract.how_many_connected.count) %></h3>
  </div>
  <%= page_entries_info @contracts %>
  <table cellspacing="0" cellpadding="0">
    <tbody>
      <tr class="odd">
        <th><%= check_box_tag :select_all %></th>
        <th><%= t('activerecord.attributes.contract.id') %></th>
        <th><%= order @search, :by => :client_name , :as => client_name_plus_external_client_number_and_detail_cpe_node_label %></th>
        <th><%= order @search, :by => :plan_id, :as => t('activerecord.attributes.contract.plan')  %></th>
        <th><%= order @search, :by => :ip, :ascend_scope => "ascend_by_ip_custom", :descend_scope => "descend_by_ip_custom", :as => t('activerecord.attributes.contract.ip') %></th>
        <th><%=t 'activerecord.attributes.contract.forwarded_ports' %></th>
        <th><%= order @search, :by => :state, :as => t('activerecord.attributes.contract.state') %></th>
        <th><%= order @search, :by => :current_traffic_data_count, :as => t('activerecord.attributes.traffic.data_count') %></th>
        <%= render :partial => "shared/plugins_table_headers" %>
        <% if current_user.may_update_contracts? or current_user.may_index_contracts? or current_user.may_destroy_contract?(Contract.new)%>
        <th></th>
        <% end %>
      </tr>
      <% @contracts.each_with_index do |contract,i| %>
        <% css_class = i%2 == 0 ? "even" : "odd" %>
        <tr class="<%= css_class %>" >
          <td><%= check_box_tag "contracts_ids[]", contract.id %></td>
          <td><%= contract.id %></td>
          <td>
            <%= link_to h(contract.client.name), client_path(contract.client) %> <%=h external_client_number_and_detail_cpe_node(contract) %><br/>
            <%= link_to Graph.new(:element => contract).img("day", "small"), graph_contract_path(contract) %>
          </td>
          <td><%=link_to h(contract.plan.name), plan_path(contract.plan) %></td>
          <td>
            <% if contract.public_address %>
              <span class="public_address"><%= contract.public_address.ip %>-&gt;</span><%= h(contract.ip) + contract_ip_link(contract.ip) %>
            <% else %>
              <%= h(contract.ip) + contract_ip_link(contract.ip) %>
            <% end %>
            <% if !contract.mac_address.blank? %>
              <br/><span class="mac_address">(<%= contract.mac_address %>)</span>
            <% end %>
            <% if contract.proxy_arp %>
              <br/><span class="proxy_arp"><%=t 'activerecord.attributes.contract.proxy_arp' %></span>
            <% end %>
          </td>
          <td><%= contract.forwarded_ports.collect{|fp| "<span class=\"forwarded_port\">#{fp.to_s}</span><br/>"} %></td>
          <td>
            <%=h contract.state.human %>
            <br />
            <span class=<%= contract.is_connected? ? "green" : "red" %>>
              <b><%= contract.is_online? %></b>
            </span>
          </td>
          <td><%= show_traffic(contract) rescue 0 %> <%= current_consumption_percentage_of contract %></td>
          <%= render :partial => "shared/plugins_table_cells", :locals => {:object => contract} %>
          <% if current_user.may_update_contract?(contract) or current_user.may_destroy_contract?(contract) %>
            <td>
              <% if current_user.may_update_contract?(contract) %>
                <%= link_to t('buttons.edit'), edit_contract_path(contract) %>
              <% end %>
              <% if current_user.may_destroy_contract?(contract) %>
                <br/>
                <br/>
                <%= link_to t('buttons.delete'), contract, :confirm => t('messages.confirm'), :method => :delete %>
              <% end %>
            </td>
          <% elsif current_user.may_show_contract?(contract) %>
            <td><%= link_to t('buttons.show'), contract_path(contract) %></td>
          <% end %>
        </tr>
      <% end %>
    </tbody>
  </table>
  <%= will_paginate @contracts %>
</div>
<% end %>
